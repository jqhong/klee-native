/*
 * Copyright (c) 2017 Trail of Bits, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package klee.native.snapshot;

enum PageRangeKind {
  kLinuxStackPageRange = 0;
  kLinuxHeapPageRange = 1;
  kLinuxVVarPageRange = 2;
  kLinuxVDSOPageRange = 3;
  kLinuxVSysCallPageRange = 4;
  
  kFileBackedPageRange = 5;
  kAnonymousPageRange = 6;
  kAnonymousZeroRange = 7;
}

message PageRange {
  required int64 base = 1;
  required int64 limit = 2;
  
  required bool can_read = 3;
  required bool can_write = 4;
  required bool can_exec = 5;
  
  required PageRangeKind kind = 6;
  
  required string name = 7;
  
  optional string file_path = 8;
  optional int64 file_offset = 9;
}

message AddressSpace {
  required int64 id = 1;
  optional int64 parent_id = 2;
  repeated PageRange page_ranges = 3;
}

message Task {
  // Program counter at which execution should resume.
  required int64 pc = 1;
  
  // Verbatim copy of the arch-specific `State` structure when the snapshot
  // was taken.
  required bytes state = 2;
  
  // Which address space to use to begin execution.
  required int64 address_space_id = 3;
}

message Program {
  
  // Name of the architecture of the snapshotted program.
  required string arch = 1;
   
  // Name of the OS of the snapshotted program.
  required string os = 2;
  
  // Command-line of original program.
  repeated string argv = 3;
  
  repeated AddressSpace address_spaces = 4;
  
  repeated Task tasks = 5;
}
